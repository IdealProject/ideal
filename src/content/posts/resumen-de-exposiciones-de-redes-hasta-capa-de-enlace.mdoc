---
title: Resumen de Exposiciones de Redes Hasta Capa de Enlace
draft: false
description: Resumen de anotaciones tomadas durante exposiciones de redes
authors:
  - matias-mareco
major:
  discriminant: infor
  value:
    discriminant: '4'
    value: Rc1
---
# Exposiciones sobre Redes de Computadoras

---

## üåê  **Modulaci√≥n y Multiplexaci√≥n**

### üì° **Modulaci√≥n Digital**

#### ¬øPor qu√© se usa?

- **Problema**: Las se√±ales digitales (bits: 0s y 1s) no pueden viajar largas distancias por cables o aire.
- **Soluci√≥n**: Convertirlas en **ondas anal√≥gicas** (como el sonido o la luz).\
  *Comparaci√≥n*: Es como traducir un libro a otro idioma para que pueda ser le√≠do en otro pa√≠s.

#### Tipos de Modulaci√≥n:

{% table %}
- Tipo
- Funcionamiento
- Comparaci√≥n
- Detalle T√©cnico
---
- **ASK**
- Modula la **amplitud** de la onda (0 = amplitud baja, 1 = amplitud alta).
- Como un sem√°foro (rojo=0, verde=1)
- Usado en controles remotos IR. Sensible a interferencias (ej: luz ambiental).
---
- **FSK**
- Modula la **frecuencia** (0 = tono bajo, 1 = tono alto).
- Como dos notas musicales (Do=0, Re=1)
- Usado en m√≥dems antiguos. M√°s estable que ASK pero ocupa m√°s ancho de banda.
---
- **PSK**
- Modula la **fase** de la onda (ej: 0¬∞=0, 180¬∞=1).
- Como girar un interruptor en dos posiciones
- BPSK (2 fases) usado en Wi-Fi. QPSK (4 fases) en sat√©lites.
{% /table %}

### üîÑ **Multiplexaci√≥n**

#### ¬øPara qu√© sirve?

- **Objetivo**: Permitir que m√∫ltiples usuarios compartan un **mismo medio f√≠sico** (cable, frecuencia) sin interferencias.\
  *Comparaci√≥n*: Como dividir una carretera en carriles para diferentes tipos de veh√≠culos.

#### T√©cnicas Clave:

1. **FDM (Divisi√≥n de Frecuencia)**:
   - Cada usuario tiene una **banda de frecuencia** asignada.\
     *Ejemplo*: Emisoras de radio (FM 88.1, 92.5, etc.).\
     ‚ö†Ô∏è **Limitaci√≥n**: Regulado por **CONATEL** para evitar solapamientos (como un controlador a√©reo de frecuencias).
1. **TDM (Divisi√≥n de Tiempo)**:
   - **Est√°tico**: Turnos fijos (ej: 0.1 segundos por usuario).\
     *Problema*: Desperdicio si un usuario no env√≠a datos.\
     *Comparaci√≥n*: Como una reuni√≥n donde cada persona habla 1 minuto en orden fijo.
   - **Din√°mico**: Asigna slots seg√∫n demanda.\
     *Comparaci√≥n*: Como un moderador que da la palabra solo a quienes levantan la mano.
1. **CDMA (Divisi√≥n de C√≥digo)**:
   - Cada usuario tiene un **c√≥digo √∫nico** (ej: GPS: sat√©lites usan c√≥digos diferentes).\
     *Comparaci√≥n*: Como una fiesta donde todos hablan al mismo tiempo, pero en idiomas diferentes.

---

## üï∏Ô∏è **Topolog√≠as de Red**

### üîå **Topolog√≠as F√≠sicas**

#### 1. **Bus** (Obsoleta pero hist√≥rica)

- **Funcionamiento**: Todos conectados a un **cable central**.\
  *Comparaci√≥n*: Como una cadena de correos donde cada persona lee el mensaje y lo pasa al siguiente.
- **Problema**: Si el cable se corta, la red colapsa.\
  *Ejemplo hist√≥rico*: Ethernet coaxial en los 80s.

#### 2. **Estrella** (La m√°s com√∫n hoy)

- **Funcionamiento**: Todos conectados a un **switch/hub central**.\
  *Comparaci√≥n*: Como una rueda de bicicleta: los rayos son dispositivos y el centro es el switch.
- **Ventaja**: Si un dispositivo falla, los dem√°s siguen funcionando.
- **Desventaja**: El switch es un **punto √∫nico de fallo**.

#### 3. **Malla** (Para redes cr√≠ticas)

- **Funcionamiento**: Cada nodo est√° conectado a m√∫ltiples nodos.\
  *Comparaci√≥n*: Como una telara√±a: si un hilo se rompe, hay caminos alternativos.
- **Usos**: Militar, hospitales, centros de datos.
- **Costo**: Requiere  ùëõ(ùëõ‚àí1)/2 conexiones para ùëõ nodos (ej: 10 nodos ‚Üí 45 cables).

### üåü **Topolog√≠as L√≥gicas**

#### 1. **Broadcast** (Ethernet)

- **Funcionamiento**: Todos reciben los datos, pero solo el destinatario los procesa.\
  *Comparaci√≥n*: Como un meg√°fono en una plaza: todos escuchan, pero solo uno responde.

#### 2. **Token Passing** (Token Ring)

- **Funcionamiento**: Un "testigo" electr√≥nico da permiso para transmitir.\
  *Comparaci√≥n*: Como un micr√≥fono en una reuni√≥n: solo quien lo tiene puede hablar.

---

## üõ∞Ô∏è  **Redes de √Årea Amplia y Telefon√≠a**

### üìû **Evoluci√≥n de la Telefon√≠a M√≥vil**

{% table %}
- Generaci√≥n
- Tecnolog√≠a
- Comparaci√≥n
- Detalle Clave
---
- **1G**
- Anal√≥gica (AMPS)
- Walkie-talkie gigante
- Sin cifrado: cualquiera pod√≠a escuchar llamadas con un esc√°ner.
---
- **2G**
- Digital (GSM)
- SMS vs Correo postal
- Introdujo cifrado y mensajes de texto.
---
- **3G**
- Datos m√≥viles (UMTS)
- Autopista de 3 carriles
- Permiti√≥ videollamadas y navegaci√≥n web b√°sica.
---
- **4G**
- IP sobre paquetes (LTE)
- Tren bala vs bicicleta
- Velocidades de ~100 Mbps. Baja latencia para streaming.
---
- **5G**
- Ondas milim√©tricas y MIMO masivo
- Teleportaci√≥n vs caminar
- Latencia de ~1 ms. Usa **beamforming** para enfocar se√±ales como un l√°ser.
{% /table %}

### üì∫ **Televisi√≥n por Cable vs Fibra √ìptica**

{% table %}
- Caracter√≠stica
- Cable Coaxial
- Fibra √ìptica (GPON)
---
- **Velocidad**
- Hasta 100 Mbps (DOCSIS 3.1)
- Hasta 10 Gbps
---
- **Interferencia**
- Sensible a ruido el√©ctrico
- Inmune a interferencias electromagn√©ticas
---
- **Comparaci√≥n**
- Tuber√≠a de agua tradicional
- Tuber√≠a de alta presi√≥n con filtros
{% /table %}

---

## üîó**Capa de Enlace de Datos**

### üõ°Ô∏è **Entramado (Framing)**

#### M√©todos:

1. **Bytes Bandera**:
   - Delimitadores: `0x7E` (hex) marca inicio/fin de trama.\
     *Problema*: Si los datos contienen `0x7E`, se usa **byte stuffing** (insertar `0x7D` antes).\
     *Comparaci√≥n*: Como usar comillas en un texto: `"Hola "mundo""` ‚Üí `"Hola \"mundo\""`.
1. **Bits Bandera**:
   - Delimitador: `01111110`.
   - **Bit stuffing**: Tras cinco `1`s consecutivos, insertar un `0`.\
     *Ejemplo*: `011111` ‚Üí `0111110`.

### üîç **Control de Errores**

#### 1. **Detecci√≥n**:

- **CRC (Cyclic Redundancy Check)**:
  - Genera un valor basado en operaciones matem√°ticas con los bits.\
    *Comparaci√≥n*: Como un c√≥digo de verificaci√≥n en un ISBN de libros.

#### 2. **Correcci√≥n**:

- **C√≥digo de Hamming**:
  - A√±ade bits de paridad en posiciones espec√≠ficas (ej: potencias de 2).\
    *Ejemplo*: Para `1011`, se calculan bits en posiciones 1, 2, 4.

### ‚öôÔ∏è **Mecanismos de Confiabilidad**

- **ACK/NAK**:
  - ACK = "Recib√≠ el paquete". NAK = "Hubo error, reenv√≠a".\
    *Comparaci√≥n*: Como una entrega certificada con acuse de recibo.
- **Temporizadores**:
  - Si no hay ACK en X segundos, se reenv√≠a el paquete.\
    *Problema*: Paquetes duplicados si el ACK llega tarde. Soluci√≥n: **N√∫meros de secuencia**.
